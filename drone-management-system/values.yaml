# Default values for drone-management-system.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: drone-management-system
  pullPolicy: Never
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}
revisionHistoryLimit: 2


podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: NodePort
  port: 8080
  nodePort: 32000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: "1500m"
    memory: "768Mi"
  requests:
    cpu: "1500m"
    memory: "256Mi"

#livenessProbe:
#  httpGet:
#    path: /api/v1/drone
#    port: 8080
#readinessProbe:
#  httpGet:
#    path: /api/v1/drone
#    port: 8080

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
 - name: config-volume
   configMaps:
     - service-auth-cfg


# Additional volumeMounts on the output Deployment definition.
volumeMounts:
 - name: config-volume
   mountPath: "/config"
#   subPath: "service-auth-cfg"

nodeSelector: {}

tolerations: []

affinity: {}

postgresql:
  postgresqlPassword: postgres
  postgresqlUsername: postgres

containers:
  - name: "drone-management-system"
    image: "drone-management-system"
    tag: "latest"
    pullPolicy: Never
    volumeMounts:
      - name: config-volume
        path: "/config"
    ports:
      - name: http
        port: 8080
        protocol: TCP

configMaps:
  - name: service-auth-cfg
    datatype: "properties"
    data: |
      #
      # Service "auth", local configuration
      #
      
      
      
      ################################################################################
      # General AUTH-Service configuration
      ################################################################################
      #
      # Additional properties may be added according to the variables in
      # in the file specified in 'auth.baseconfig.json.file'
      
      # Base-Configuration File
        auth.baseconfig.json.file=/config//service.archive.base.json
        
        # Path to importfile
        auth.importconfig.path=/config//service.auth.importconfig.json
        
        ###########################
        # Runtime Database
        #
        #db.url=jdbc:mysql://mysql/im_auth?useServerPrepStmts=true&useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=Europe/Berlin
        db.url=jdbc:mysql://mysql/im_archive?
        db.user=im_user
        db.password=im_user123
        db.pool.size.idle.min=5
        db.pool.size.max=10
        db.pool.connection.timeout.millis=300000
        db.pool.connection.lifetime.max.millis=1800000
        
        spring.datasource.url=jdbc:postgresql://postgresql:5432/drone-management-system
        spring.datasource.username=postgres
        spring.datasource.password=postgres
        spring.datasource.driver-class-name=org.postgresql.Driver
        spring.jpa.hibernate.ddl-auto=update

        project.version=1.0
        project.name=Drone Management System
        project.description=Drone Management System REST API
        springdoc.swagger-ui.path=/swagger-ui.html
        spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
        # Additional connection properties for created DataSources prefixed with 'db.connectionproperty.'
        #
        #'oracle.jdbc.javaNetNio=false' prevents
        #'java.sql.SQLRecoverableException: I/O-Fehler: Socket read interrupted'
        #when using Oracle Databases
        db.connectionproperty.oracle.jdbc.javaNetNio=false
        
        # Kc JPA-Provider Settings
        #
        keycloak.connectionsJpa.initializeEmpty=true
        keycloak.connectionsJpa.migrationStrategy=update
        keycloak.connectionsJpa.showSql=false
        keycloak.connectionsJpa.formatSql=true
        keycloak.connectionsJpa.globalStatsInterval=-1
        
        
        ###########################
        # Additional network configuration
        #
        # Setting of the base uri to use for redirecting and references in
        # the OIDC discovery
        #
        # ID of the ProviderFactory to use.
        # "headerBased" is our "HeaderBasedHostnameProviderFactory"
        keycloak.hostname.provider=headerBased
        # The name of the request header to use for determining the external base url.
        # - When not set the default behavior is applied (of the DefaultHostnameProvider)
        keycloak.hostname.headerBased.headername=x-base-external
        
        # The name of the header used to communicate the address of an client when
        # requests are routed thru proxies.
        vertx.requesthandler.forwardedfor.headername=x-forwarded-for
        
        # The maximum time to wait for new data to arrive in milliseconds or '-1' when no
        # timeout should be applied.
        # (applies to incoming request)
        request.read.timeout.millis=60000
        
        ###########################
        # Truststore configuration
        #
        # Truststore that is used for outgoing communication
        # (by the Keycloak HTTPClient, LDAP-Client, ...)
        keycloak.truststoreprovider.file=/config//santhoshs-MBP_truststore.jks
        keycloak.truststoreprovider.passoword=Admin#123
        # How and if hostnames in the certificates SAN and CN
        # should be utilized.
        # One of:
        # 'WILDCARD' - Wildcards can be used in hostnames, e.g. '*.test.com'
        #              would match 'my.test.com' and 'your.test.com'
        # 'STRICT'   - Exact matching, e.g. 'my.test.com' would only match exactly
        #              that hostname.
        # 'ANY'      - The servers hostnames are not validated
        keycloak.truststoreprovider.hostnameverification=WILDCARD
        
        ###########################
        # HttpClient configuration
        #
        # Parameters used by the Keycloak HTTPClient that is utilized for
        # outgoing auth requests, e.g. for when using Identity Brokering.
        keycloak.httpclient.max-connection-idle-time-millis=1000
        keycloak.httpclient.establish-connection-timeout-millis=5000
        keycloak.httpclient.socket-timeout-millis=5000
        keycloak.httpclient.connection-pool-size=128
        keycloak.httpclient.max-pooled-per-route=64
        keycloak.httpclient.disable-cookies=true
        keycloak.httpclient.client-keystore=
        keycloak.httpclient.client-keystore-password=
        keycloak.httpclient.client-key-password=
        keycloak.httpclient.disable-trust-manager=false
        # Proxy Config
        # as '${targetHostRegex};${proxyAddress}' or '${targetHostRegex};NO_PROXY'
        # Example:
        # keycloak.httpclient.proxy-mapping-1=.*;http://proxy.corp.de:8080
        # keycloak.httpclient.proxy-mapping-2=(localhost|127.0.0.1);NO_PROXY
        #
        keycloak.httpclient.proxy-mapping-1=.*;NO_PROXY
        keycloak.httpclient.proxy-mapping-2=.*;NO_PROXY
        
        
        ###########################
        # Lock configuration
        #
        # The time in Milliseconds after which locks should expire/need to be refreshed.
        # A value of '0' signals that Locks should not expire.
        #
        # For general-purpose Locks
        locks.general.expiry=300000
        # For Interface Manager specific Locks
        locks.im.expiry=300000
        
        ###########################
        # IM-Client configuration
        #
        # Realm name where the client is located.
        keycloak.realm.im.name=im
        # Client name.
        keycloak.im.client.name=im
        # A list of valid redirect-URIs separated by ";" that will be added to the list of
        # valid redirect URIs if not already present.
        # E.g. "de.dtpublic.impulse://callback;https://fxgui.im.local/authorization-code/callback;/*"
        keycloak.client.im.validredirecturis=de.dtpublic.impulse://callback;https://fxgui.im.local/authorization-code/callback;/*
        
        ###########################
        # Theme configuration
        #
        # Value for the Cache-Control: max-age HTTP-Header-Value.
        keycloak.theme.staticMaxAge=2592000
        # Should Theme-Templates be cached? "false" is handy for development.
        keycloak.theme.cacheTemplates=true
        # Should Themes be cached? "false" is handy for development.
        keycloak.theme.cacheThemes=true
        # Path to the folder where custom Themes can be placed.
        keycloak.theme.dir=./business/service.auth.themes.custom/
        
        ################################################################################
        # General microservice configuration
        ################################################################################
        
        ###########################
        # diagnose framework configuration
        #
        # each class capable to serve diagnose monitoring and providing measuring points
        # has to be specified with the prefix DIAG_PREFIX.<classname>
        #DIAG_PREFIX.<classname>
        
        ###########################
        # password encryption framework configuration
        #
        IM.IPasswordReader.class=
        IM.IPasswordReader.jar=
        
        ###########################
        # further adjustments
        #
        # Log4j configuration file
        #Logging.properties=/config//log4j_auth.properties
        Logging.properties=
        
        # The logical servername defines a cluster node name of the Interface Manager.
        # Even if the platform is not started in cluster mode a unique name has to be
        # defined, preventing interference of different platform installations in the
        # same network.
        Logical.Servername=IM Server
        
        # defines whether the Interface Manager platform is running in cluster mode.
        # allowed values: true | false
        Cluster.Node=false
        
        
        ################################################################################
        # vert.x cluster configuration
        
        ###########################
        # general adjustments
        #
        vertx.temp.dir=/users/santhoshkumarneelam/install-im/tmp/vertx-cache
        vertx.keystore.path=/config//santhoshs-MBP_keystore.jks
        #vertx.keystore.path=
        vertx.keystore.password=Admin#123
        vertx.truststore.path=/config//santhoshs-MBP_truststore.jks
        #vertx.truststore.path=
        vertx.truststore.password=Admin#123
        
        ###########################
        # in-memory data grid adjustments for the service discovery
        #
        
        # select the imdg.
        # 'hazelcast' or 'infinispan'
        cluster.imdg.select=infinispan
        
        # hazelcast configuration file, defining multicast or dedicated node discovery
        hazelcast.config=/config//hazelcast.auth.xml
        
        # infinispan-specific configuration
        ##########
        #
        # infinispan configuration file
        infinispan.config=/config//infinispan.auth.xml
        #infinispan.config=/config//infinispan.default.xml
        # infinispan transport stack name, available defaults are: "prod_encrypted_tcp_tcpping", "prod_encrypted_udp_multicast"
        infinispan.transport.stack.name=prod_unencrypted_tcp_dnsping_kubernetes
        infinispan.cluster.name=IM Cluster Group
        infinispan.node.name=auth
        
        # infinispan host- and port configuration
        # bind address to use for communication and key exchange
        # - for special values like "SITE_LOCAL", "NON_LOOPBACK" or "match-interface"
        #   see: http://www.jgroups.org/manual4/index.html#Transport
        infinispan.jgroups.bind.address=SITE_LOCAL
        # bind port
        infinispan.jgroups.bind.port=7800
        # increment the port up to the given range if the port is blocked - '0' means that
        # startup fails when the exact "infinispan.jgroups.bind.port" is blocked
        infinispan.jgroups.bind.port.range=0
        
        # infinispan configuration for multicast setups, e.g. "prod_encrypted_udp_multicast"
        #
        # multicast address
        infinispan.jgroups.mcast_addr=228.6.7.8
        # multicast port
        infinispan.jgroups.mcast_port=46655
        
        # infinispan configuration for tcpping setups, e.g. "prod_encrypted_tcp_tcpping"
        #
        # list of the cluster nodes hosts/ports
        # - format: "host1[port1],host2[port2],..."
        infinispan.jgroups.tcpping.initial_hosts=
        # allows to probe on additional port for
        # the given hosts by incrementing the ports up to the
        # given range
        infinispan.jgroups.tcpping.port_range=0
        
        # infinispan configuration for key-exchange
        #
        # the bind port to use for key exchange
        infinispan.jgroups.ssl.key.exchange.bind.port=2952
        # increment the port up to the given range if the port is blocked - '0' means that
        # startup fails when the exact "infinispan.jgroups.ssl.key.exchange.bind.port" is blocked
        infinispan.jgroups.ssl.key.exchange.bind.port.range=0
        # enable client certificate auth? (mTLS)
        infinispan.jgroups.ssl.key.exchange.client.auth.enabled=true
        
        # infinispan configuration for dnsping setups, e.g. "prod_unencrypted_tcp_dnsping_kubernetes"
        #
        # Comma separated list of dns queries to use for discovering cluster members
        infinispan.jgroups.dns.query=clustered-app.default.svc.cluster.local
        
        ################################################################################
        # EVENT BUS adjustments
        
        ###########################
        # general attributes for the clustered event bus
        #
        # SSL/TLS: comma-separated list of allowed cipher suites
        #vertx.eventbus.enabled.cipher.suites=
        
        # SSL/TLS: comma-separated list of allowed SSL/TLS protocols
        # e.g.: "TLSv1", "TLSv1.1", "TLSv1.2"
        # NOTE:
        #   SSLv3 is NOT enabled due to POODLE vulnerability http://en.wikipedia.org/wiki/POODLE
        #   "SSLv2Hello" is NOT enabled since it's disabled by default since JDK7
        #vertx.eventbus.enabled.secure.transport.protocol=
        
        #vertx.eventbus.cluster.ping.interval=20000
        #vertx.eventbus.cluster.ping.reply.interval=20000
        #vertx.eventbus.idle.timeout=0
        
        # socket linger timeout (in milliseconds) defines how long a socket should stay
        # in TIME_WAIT status after it has been closed cleanly ("active close")
        #vertx.eventbus.so.linger.timeout=-1
        
        #vertx.eventbus.ssl.handshake.timeout=10000
        
        # allowed values: true | false
        #vertx.eventbus.tcp.keep.alive=false
        
        # SSL/TLS: use Application-Layer Protocol Negotiation
        # allowed values: true | false
        vertx.eventbus.use.alpn=true
        
        # force Netty to use pooled buffers
        # allowed values: true | false
        # NOTE:
        #   if memory-leaks are detected disable this feature,
        #   refer to https://netty.io/wiki/reference-counted-objects.html
        vertx.eventbus.use.pooled.buffers=true
        
        ###########################
        # attributes for the clustered event bus server
        #
        # hostname to use when clustering, (0.0.0.0 meaning listen on all interfaces)
        #vertx.eventbus.host=0.0.0.0
        vertx.eventbus.host=archive.default.svc.cluster.local
        
        # cluster port (defaults to 0, meaning a random port)
        vertx.eventbus.port=9092
        
        # public hostname to use when clustering
        # (if null, means use the same as vertx.eventbus.host)
        vertx.eventbus.public.host=auth
        
        # public cluster port, defaults to -1 (the same as vertx.eventbus.port)
        vertx.eventbus.public.port=-1
        
        # SSL/TLS: defines whether client auth is required
        # allowed values are:
        #   NONE
        #      No client authentication is requested or required.
        #   REQUEST
        #      Accept authentication if presented by client. If this option is set
        #      and the client chooses not to provide authentication information about
        #      itself, the negotiations will continue.
        #   REQUIRED
        #      Require client to present authentication, if not presented then
        #      negotiations will be declined.
        vertx.eventbus.client.auth=NONE
        
        # If you're creating a lot of connections to a Vert.x server in a short period
        # of time, you may need to increase the accept backlog value in order to avoid
        # the TCP accept queue getting full.
        # Default is 1024
        # vertx.eventbus.accept.backlog=10000
        
        # Each TCP connection allocates memory for its buffer, so to support many
        # connections in limited RAM you may need to reduce the TCP buffer size.
        #vertx.eventbus.receive.buffer.size=4096
        #vertx.eventbus.send.buffer.size=4096
        
        ###########################
        # attributes for the clustered event bus client
        #
        #vertx.eventbus.connect.timeout=60000
        #vertx.eventbus.reconnect.attempts=0
        #vertx.eventbus.reconnect.interval=1000
        
        # defines whether to trust all server certificates or not - true | false
        vertx.eventbus.trust.all.servers=true
        
        
        ################################################################################
        # REST-API general adjustments
        
        vertx.http.port=8080
        vertx.http.host=auth.default.svc.cluster.local
        vertx.http.public.host=auth
        
        # SSL/TLS: comma-separated list of allowed SSL/TLS protocols
        # e.g.: "TLSv1", "TLSv1.1", "TLSv1.2"
        # NOTE:
        #   SSLv3 is NOT enabled due to POODLE vulnerability http://en.wikipedia.org/wiki/POODLE
        #   "SSLv2Hello" is NOT enabled since it's disabled by default since JDK7
        #vertx.http.enabled.secure.transport.protocol=
        
        #vertx.http.idle.timeout=0
        
        # socket linger timeout (in milliseconds) defines how long a socket should stay
        # in TIME_WAIT status after it has been closed cleanly ("active close")
        #vertx.http.so.linger.timeout=-1
        
        #vertx.http.ssl.handshake.timeout=10000
        
        # allowed values: true | false
        #vertx.http.tcp.keep.alive=false
        
        # SSL/TLS: use Application-Layer Protocol Negotiation
        # allowed values: true | false
        vertx.http.use.alpn=true
        
        # force Netty to use pooled buffers
        # allowed values: true | false
        # NOTE:
        #   if memory-leaks are detected disable this feature,
        #   refer to https://netty.io/wiki/reference-counted-objects.html
        vertx.http.use.pooled.buffers=true
        
        # the maximum HTTP chunk size a server request handler will receive / in bytes
        #vertx.http.max.chunk.size=8192
        
        # initial buffer size for HttpObjectDecoder in bytes
        #vertx.http.decoder.initial.buffer.size=128
        
        # max length of all headers (http/1.1)
        # Note: cluster-internal communication is http/2
        #vertx.http.max.header.size=8192
        
        ###########################
        # attributes for the cluster-internal http server
        #
        # If you're creating a lot of connections to a Vert.x server in a short period
        # of time, you may need to increase the accept backlog value in order to avoid
        # the TCP accept queue getting full.
        # Default is 1024
        # vertx.http.accept.backlog=10000
        
        # SSL/TLS: defines whether client auth is required
        # allowed values are:
        #   NONE
        #      No client authentication is requested or required.
        #   REQUEST
        #      Accept authentication if presented by client. If this option is set
        #      and the client chooses not to provide authentication information about
        #      itself, the negotiations will continue.
        #   REQUIRED
        #      Require client to present authentication, if not presented then
        #      negotiations will be declined.
        vertx.http.client.auth=NONE
        
        ###########################
        # attributes for the http clients
        #
        # defines whether to trust all server certificates or not - true | false
        vertx.http.trust.all.servers=true
        
        # keep alive timeout for HTTP/2 connections in seconds
        # default is 60 seconds
        # This value determines how long a connection remains unused in the pool
        # before being evicted and closed. A negative value disables the keep alive
        # feature.
        #vertx.http.keep.alive.timeout=60
        
        # connection timeout in milliseconds
        #vertx.http.connect.timeout=60000
        
        ###########################
        # REST-API load balancer adjustments
        #
        # defines how many times the load balancer should try to find a suitable node
        # for a request before giving up
        vertx.executor.pick.effort=5
        
        # defines how many times the load balancer should retry a failed request before
        # giving up
        vertx.executor.send.retries=3
        
        # delay before the first retry attempt (in milliseconds)
        vertx.executor.send.backoff.first=500
        
        # maximum delay before any retry attempt (in milliseconds)
        vertx.executor.send.backoff.max=15000
        
        # jitter factor for exponential backoffs that adds randomness to each retry.
        # This can be helpful in reducing cascading failures due to retry-storms.
        # Defaults to 0.5 (a jitter of at most 50% of the computed delay).
        vertx.executor.send.jitter=0.5
        
        ###########################
        # REST-API circuit breaker adjustments
        #
        # threshold when a node should be locked and will no longer receive requests.
        # The default value applies if 15 of 20 requests failed.
        vertx.executor.circuit.failure.threshold=15
        vertx.executor.circuit.failure.executions=20
        
        # threshold when a locked node should be unlocked and will receive requests again.
        # The default value applies if 6 of 10 requests succeeded.
        vertx.executor.circuit.success.threshold=6
        vertx.executor.circuit.success.executions=10
        
        # delay (in milliseconds) to wait before trying requests on a locked node.
        # Default is 1min.
        vertx.executor.circuit.delay=60000
        
        ###########################
        # REST-API request backup adjustments
        #
        # the backup strategy if all retry attempts have been exhausted.
        # Default is file system backup.
        vertx.executor.backup=com.tsystems.interfaceManager.service.util.loadbalance.backup.file.VertxFilesystemBackupStrategy
        
        # directory where the backup files will be written to.
        vertx.executor.backup.file.directory=/users/santhoshkumarneelam/install-im/backup
        
        # maximum file number in a backup directory before creating a new sub-directory
        vertx.executor.backup.file.directory.limit=10000
        
        # delay (in milliseconds) between restore cycles
        vertx.executor.backup.file.restore.delay=15000
        
        ###########################
        # Metrics configuration
        
        # interval (in seconds) in which the current memory usage will be written to a log file. "-1" to disable.
        logger.memory.interval=60
        
        # Enable|Disable all metrics. If set to false, the remaining metric options will have no effect, as all metrics will be disabled.
        metrics.enabled=true
        
        # Enable|Disable garbage collection metrics
        metrics.gc.enabled=true
        
        # Enable|Disable memory metrics
        metrics.memory.enabled=true
        
        # Enable|Disable cpu metrics
        metrics.cpu.enabled=true
        
        # Enable|Disable thread metrics
        metrics.thread.enabled=true
        
        # Enable|Disable vert.x metrics
        metrics.vertx.enabled=true
        
        # Enable (true) or Disable (false) the Prometheus Scraping Endpoint
        metrics.prometheus.enabled=false
        
        # Set if meter descriptions should be sent to Prometheus.
        # Turn this off to minimize the amount of data sent on each scrape.
        metrics.prometheus.descriptions=true
        
        # The step size to use in computing windowed statistics like max. The default is 1 minute.
        # To get the most out of these statistics, align the step interval to be close to your scrape interval.
        metrics.prometheus.step=60000


      



